services:
  # === MCP SERVER ===
  chat-help-mcp:
    build: .
    image: chat-help-mcp
    container_name: chat-help-mcp
    hostname: chat-help-mcp
    networks:
      - demo
    restart: unless-stopped
    ports:
      - "9080:8080"
    volumes:
      - ./data:/app/data
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - PYTHONUNBUFFERED=1
      - MCP_HOST=0.0.0.0
      - MCP_PORT=8080
      - SEARXNG_URL=http://searxng:8080
      - MINIFLUX_URL=http://miniflux:8080
      - WIKI_URL=https://10.10.10.5:4443
    command: python server.py
    healthcheck:
      test: ["CMD-SHELL", "python -c 'import urllib.request; urllib.request.urlopen(\"http://localhost:8080/health\")' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

  # === SEARXNG ===
  searxng:
    image: searxng/searxng:latest
    container_name: chat-help-searxng
    hostname: searxng
    networks:
      - demo
    restart: unless-stopped
    ports:
      - "9081:8080"
    volumes:
      - ./searxng:/etc/searxng

  # === MINIFLUX ===
  miniflux-db:
    image: postgres:15-alpine
    container_name: chat-help-miniflux-db
    hostname: miniflux-db
    networks:
      - demo
    restart: unless-stopped
    environment:
      - POSTGRES_USER=miniflux
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=miniflux
    volumes:
      - miniflux_db:/var/lib/postgresql/data

  miniflux:
    image: miniflux/miniflux:latest
    container_name: chat-help-miniflux
    hostname: miniflux
    networks:
      - demo
    restart: unless-stopped
    ports:
      - "9082:8080"
    depends_on:
      - miniflux-db
    environment:
      - DATABASE_URL=postgres://miniflux:secret@miniflux-db/miniflux?sslmode=disable
      - RUN_MIGRATIONS=1
      - CREATE_ADMIN=1
      - ADMIN_USERNAME=admin
      - ADMIN_PASSWORD=admin123

volumes:
  miniflux_db:

networks:
  demo:
    name: chat-help_demo
    driver: bridge