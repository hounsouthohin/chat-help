services:
  # === MCP SERVER ===
  chat-help-mcp:
    build: .
    image: chat-help-mcp
    container_name: chat-help-mcp
    hostname: chat-help-mcp
    networks:
      - demo
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - ./data:/app/data
    # ✅ AJOUT : Accès à l'hôte pour le Wiki
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - PYTHONUNBUFFERED=1
      - MCP_HOST=0.0.0.0
      - MCP_PORT=8080
      - SEARXNG_URL=http://searxng:8080
      - MINIFLUX_URL=http://miniflux:8080
      # ✅ AJOUT : URL du Wiki
      #- WIKI_URL=${WIKI_URL:-http://10.10.10.89:3000}
      - WIKI_URL=http://10.10.10.5:3001
    command: python server.py
    healthcheck:
      test: ["CMD-SHELL", "python -c 'import urllib.request; urllib.request.urlopen(\"http://localhost:8080/health\")' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

  # === POSTGRES ===
  postgres:
    image: postgres:16-alpine
    container_name: chat-help-postgres
    hostname: postgres
    networks:
      - demo
    restart: unless-stopped
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=n8n
    volumes:
      - postgres_storage:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U root']
      interval: 5s
      timeout: 5s
      retries: 10

  # === OLLAMA ===
  ollama:
    image: ollama/ollama:latest
    container_name: chat-help-ollama
    hostname: ollama
    networks:
      - demo
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      - ollama_storage:/root/.ollama
    healthcheck:
      test: ["CMD-SHELL", "ollama list || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # === N8N ===
  n8n:
    image: n8nio/n8n:latest
    container_name: chat-help-n8n
    hostname: n8n
    networks:
      - demo
    restart: unless-stopped
    ports:
      - "5678:5678"
    volumes:
      - n8n_storage:/home/node/.n8n
    depends_on:
      postgres:
        condition: service_healthy
      chat-help-mcp:
        condition: service_healthy
      ollama:
        condition: service_healthy
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=root
      - DB_POSTGRESDB_PASSWORD=password
      - N8N_ENCRYPTION_KEY=super-secret-key
      - N8N_USER_MANAGEMENT_JWT_SECRET=even-more-secret
      - OLLAMA_HOST=ollama:11434
      - N8N_SKIP_RESPONSE_COMPRESSION=true
      - N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE=true
      - N8N_RUNNERS_ENABLED=true
      - N8N_BLOCK_ENV_ACCESS_IN_NODE=false
      - N8N_EXECUTIONS_TIMEOUT=300  # ✅ 300 secondes (5 minutes)
      - N8N_EXECUTIONS_TIMEOUT_MAX=600  # ✅ Max 10 minutes

  # === AUTRES SERVICES ===
  qdrant:
    image: qdrant/qdrant
    container_name: chat-help-qdrant
    hostname: qdrant
    networks:
      - demo
    restart: unless-stopped
    ports:
      - "6333:6333"
    volumes:
      - qdrant_storage:/qdrant/storage

  searxng:
    image: searxng/searxng:latest
    container_name: chat-help-searxng
    hostname: searxng
    networks:
      - demo
    restart: unless-stopped
    ports:
      - "8081:8080"
    volumes:
      - ./searxng:/etc/searxng

  miniflux-db:
    image: postgres:15-alpine
    container_name: chat-help-miniflux-db
    hostname: miniflux-db
    networks:
      - demo
    restart: unless-stopped
    environment:
      - POSTGRES_USER=miniflux
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=miniflux
    volumes:
      - miniflux_db:/var/lib/postgresql/data

  miniflux:
    image: miniflux/miniflux:latest
    container_name: chat-help-miniflux
    hostname: miniflux
    networks:
      - demo
    restart: unless-stopped
    ports:
      - "8082:8080"
    depends_on:
      - miniflux-db
    environment:
      - DATABASE_URL=postgres://miniflux:secret@miniflux-db/miniflux?sslmode=disable
      - RUN_MIGRATIONS=1
      - CREATE_ADMIN=1
      - ADMIN_USERNAME=admin
      - ADMIN_PASSWORD=admin123

volumes:
  n8n_storage:
  postgres_storage:
  ollama_storage:
  qdrant_storage:
  miniflux_db:

networks:
  demo:
    name: chat-help_demo
    driver: bridge